@startuml lbutils
namespace lbutils {
    namespace drivers {
        class SegDisplay {
            - list _char_list
            + display()
            }
        class SegHexDisplay {
            - list _char_list
            + display()
            }
        }
    namespace graphics {
    namespace helpers {
        class Pen {
            +Colour bg_colour
            +Colour gb_colour
            +int thickness
            }
        class Pixel {
            +int x
            +int y
            +tuple x_y
            +move_to()
            +offset()
            +offset_polar()
            }
        class BoundPixel {
            +int min_x
            +int min_y
            +int max_x
            +int max_y
            }
    }
    namespace fonts {
        abstract class BaseFont {
            - bitmap
            - index
            - glyph
            {abstract} +int get_bit()
            {abstract} +int get_next()
            {abstract} +int set_position()
            }
        class Font06 {
            - bitmap
            - index
            - glyph
            +int get_bit()
            +int get_next()
            +int set_position()
            }
        class Font08{
            - bitmap
            - index
            - glyph
            +int get_bit()
            +int get_next()
            +int set_position()
            }
        class Org01{
            - bitmap
            - index
            - glyph
            +int get_bit()
            +int get_next()
            +int set_position()
            }

        }
    namespace colours {
        class Colour {
            +int red
            +int green
            +int blue
            +int as_rgb565
            +int as_rgb888
            +DEVICE_BIT_ORDER bitorder
            {static} +from_rgb565()
        }
    }
    namespace canvas {
        abstract class Canvas {
            +Colour bg_colour
            +BoundPixel cursor
            +Colour fg_colour
            +BoundPixel origin
            +Pen pen
            +int height
            +int width
            +int x
            +int y
            +int x_y
            {abstract} +draw_line()
            {abstract} +draw_rectangle()
            +draw_to()
            +fill_screen()
            +moveto()
            +move_origin_to()
            {abstract} +read_pixel()
            +select_bg_colour()
            +select_fg_colour()
            +write_char()
            {abstract} +write_pixel()
            +write_text()
            }
        }
    }
    namespace helpers {
    }
    namespace pmods {
        namespace i2c {
        }
        namespace spi {
            class OLEDrgb {
                - read()
                - write()
                + draw_line()
                + draw_rectangle()
                + read_pixel()
                + reset()
                + write_pixel()
                }
        }
    }
}

lbutils.graphics.fonts.Font06 <|-- lbutils.graphics.fonts.BaseFont
lbutils.graphics.fonts.Font08 <|-- lbutils.graphics.fonts.BaseFont
lbutils.graphics.fonts.Org01 <|-- lbutils.graphics.fonts.BaseFont

lbutils.graphics.helpers.Pixel <-- lbutils.graphics.colours.Colour
lbutils.graphics.helpers.BoundPixel <|-- lbutils.graphics.helpers.Pixel

lbutils.graphics.canvas.Canvas <-- lbutils.graphics.colours.Colour
lbutils.graphics.canvas.Canvas <-- lbutils.graphics.helpers.BoundPixel
lbutils.graphics.canvas.Canvas <-- lbutils.graphics.helpers.Pen
lbutils.graphics.canvas.Canvas <-- lbutils.graphics.fonts.BaseFont

lbutils.pmods.spi.OLEDrgb <|-- lbutils.graphics.canvas.Canvas

@enduml
